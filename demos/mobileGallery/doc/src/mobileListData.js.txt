define(["dojo/_base/lang", // dojo.clone
  "dojo/_base/connect", //dojo.connect
  "dojo/_base/html", // dojo.byId
  "dojo/_base/kernel", // dojo.getObject
  "dijit/_base/manager",//dijit.byId
  "dojo/data/ItemFileWriteStore",
  "dojox/mobile/common", // dojox.mobile.createDomButton
  "dojox/mobile/RoundRectDataList"],
function(lang, connect, html, dojo, dijit, ItemFileWriteStore, dm, RoundRectDataList) {
  dojo.getObject("demos.mobile.src.mobileLists", true);
  demos.mobile.src.mobileLists = function() {
    var static_data = { 
      items: [ 
        {label: "Apple"},
        {label: "Banana"},
        {label: "Cherry"},
        {label: "Grape"},
        {label: "Kiwi"}
      ]
    };
    var _store1 = new ItemFileWriteStore({url: "data/dataList.json", clearOnClose: true});
    var _store2 = new ItemFileWriteStore({data: lang.clone(static_data)});
    
    return {
      store1 : _store1,
      store2 : _store2,
      newItems : [[],[]],
      listsStore : _store1,
      updateItemCount: function(){
      this.listsStore.fetch({query:{},
        onBegin: function(size) {
          html.byId("listLengthLabel").innerHTML = size;
        },
        start:0,
        count: 0});
      },
      switchTo : function(idx) {
        this.listsStore = (idx === 1 ? _store1 : _store2);
        dijit.byId("mobileListsDataList").setStore(this.listsStore);
        var set1Btn = html.byId("mobileListSet1Btn");
        var set2Btn = html.byId("mobileListSet2Btn");
        if (idx === 1) { // select set1
          html.addClass(set1Btn, "mobileListSelected");
          html.addClass(set2Btn, "mobileListUnselected");
          html.removeClass(set1Btn, "mobileListUnselected");
          html.removeClass(set2Btn, "mobileListSelected");
        } else { // select set2
          html.addClass(set1Btn, "mobileListUnselected");
          html.addClass(set2Btn, "mobileListSelected");
          html.removeClass(set1Btn, "mobileListSelected");
          html.removeClass(set2Btn, "mobileListUnselected");
        }
      this.updateItemCount();
      },
      add1 : function() {
        var item = this.listsStore.newItem({label : "New Item" } );
        this.newItems[(this.listsStore == this.store1) ? 1 : 0].push(item);
      this.updateItemCount();
      },
      delete1 : function() {
        var item = this.newItems[(this.listsStore== this.store1) ? 1 : 0].pop();
        if(item){
          this.listsStore.deleteItem(item);
        }
      this.updateItemCount();
      }
    };
  }();
  return {
    init: function() { 
      var view = dijit.byId("mobileLists");
      var isInit = false;
      connect.connect(view, "onAfterTransitionIn", view, function(){
        if (!isInit) {
          this.resize();
          isInit = true;
        };
      });
      
      dm.createDomButton(html.byId("mobileListAddBtn"));
      dm.createDomButton(html.byId("mobileListDelBtn"));
    }
  };
});
